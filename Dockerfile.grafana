# Copyright 2023 mixayloff-dimaaylov at github dot com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM node:lts as build-satmap-panel
WORKDIR '/home/node/satmap-panel/'

RUN npm install -g grunt-cli

COPY ./satmap-panel/package.json .
COPY ./satmap-panel/package-lock.json .
RUN npm install

COPY ./satmap-panel/LICENSE .
COPY ./satmap-panel/plugin.json .
COPY ./satmap-panel/Gruntfile.js .
COPY ./satmap-panel/src/ src/
COPY ./satmap-panel/README.md .
RUN grunt

FROM golang:1.18 as build-datasource-backend
WORKDIR '/go/src/grafana-clickhouse'
COPY ./clickhouse-grafana/ /go/src/grafana-clickhouse
RUN env GOCACHE="/go-cache" RUN_TESTS="${RUN_TESTS:-.+}" && \
    go test -timeout 1m -failfast -tags=integration -run "${RUN_TESTS:-.+}" -v ./pkg/ && \
    GOOS=linux GOARCH=amd64 go build -buildvcs=false -o ./dist/altinity-clickhouse-plugin_linux_amd64 ./pkg/ && \
    GOOS=linux GOARCH=arm64 go build -buildvcs=false -o ./dist/altinity-clickhouse-plugin_linux_arm64 ./pkg/ && \
    GOOS=windows GOARCH=amd64 go build -buildvcs=false -o ./dist/altinity-clickhouse-plugin_windows_amd64.exe ./pkg/ && \
    GOOS=darwin GOARCH=amd64 go build -buildvcs=false -o ./dist/altinity-clickhouse-plugin_darwin_amd64 ./pkg/ && \
    GOOS=darwin GOARCH=arm64 go build -buildvcs=false -o ./dist/altinity-clickhouse-plugin_darwin_arm64 ./pkg/ && \
    chmod +x ./dist/altinity-clickhouse-plugin*

FROM node:lts as build-datasource-frontend
WORKDIR '/home/node/clickhouse-grafana/'
COPY --from=build-datasource-backend /go/src/grafana-clickhouse .
RUN if [ "3" -eq `ls -la ./node_modules/ | wc -l` ]; then npm install --production=false; fi && \
    npm run build:prod && \
    npm run test:docker

FROM grafana/grafana:9.5.1 as grafana
COPY --from=build-satmap-panel /home/node/satmap-panel/ /var/lib/grafana/plugins/satmap-panel/
COPY --from=build-datasource-frontend /home/node/clickhouse-grafana/dist/ /var/lib/grafana/plugins/vertamedia-clickhouse-datasource/

ENTRYPOINT [ "/run.sh" ]
