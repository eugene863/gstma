# Copyright 2023 mixayloff-dimaaylov at github dot com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "3.4"

services:
  zookeeper:
    container_name: ionosphere-iif-zookeeper
    profiles: ["kafka", "default"]
    image: docker.io/bitnami/zookeeper:3.4.10-r4
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: ionosphere-iif-kafka
    profiles: ["kafka", "default"]
    image: docker.io/bitnami/kafka:2.5.0
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
        #      - "./image_content/config/kafka/etc/kafka/conf/server.properties:/bitnami/kafka/config/server.properties"
    environment:
      # Unique Kafka Broker ID
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID:-0}
      # Addresses of the Zookeeper's cluster nodes. Replace if you need to join
      # an existing cluster
      - KAFKA_CFG_ZOOKEEPER_CONNECT=${KAFKA_CFG_ZOOKEEPER_CONNECT:-zookeeper:2181}
      # Address for other Kafka brokers (name resolution via docker-compose
      # name)
      - KAFKA_CFG_LISTENERS=${KAFKA_CFG_LISTENERS:-PLAINTEXT://:9092}
      # Address for Kafka clients (for external host name resolution). Replace
      # with an externally accessible address or name
      - KAFKA_CFG_ADVERTISED_LISTENERS=${KAFKA_CFG_ADVERTISED_LISTENERS:-PLAINTEXT://kafka:9092}
      - KAFKA_CFG_LOG_CLEANER_ENABLE=true
      - KAFKA_CFG_LOG_CLEANUP_POLICY=delete
      - KAFKA_CFG_LOG_RETENTION_HOURS=24
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  spark-teccalculationv2:
    container_name: ionosphere-iif-spark-teccalculationv2
    profiles: ["base", "default"]
    build:
      context: ./logserver-spark/
      target: spark-TecCalculationV2
    logging:
      driver: "local"
      options:
        max-size: "1g"
        compress: "true"
    ports:
      # DEBUG Spark UI
      - 4040:4040
    environment:
      KAFKA_HOST: 'ionosphere-iif-kafka'
      CH_HOST: 'ionosphere-iif-clickhouse'
    depends_on:
      - kafka
      - clickhouse

  clickhouse:
    container_name: ionosphere-iif-clickhouse
    profiles: ["base", "default"]
    image: 'yandex/clickhouse-server:20.7'
    ports:
      - 8123:8123
    volumes:
      - './image_content/config/clickhouse/etc/clickhouse-server/:/etc/clickhouse-server/'
      - './image_content/config/clickhouse_create_queries.sh:/docker-entrypoint-initdb.d/clickhouse_create_queries.sh'
      - clickhouse_db:/data/ch/

  grafana:
    container_name: ionosphere-iif-grafana
    profiles: ["base", "default"]
    build:
      context: ./
      dockerfile: Dockerfile.grafana
    ports:
      - 3000:3000
    volumes:
      - './image_content/config/grafana/etc/grafana/grafana.ini:/etc/grafana/grafana.ini'
      - './image_content/config/grafana/etc/grafana/provisioning/:/etc/grafana/provisioning/'
      - './image_content/config/grafana-dashboards/:/var/lib/grafana/dashboards/'
    depends_on:
      - clickhouse

  # Jupyter Lab PySpark + Almond
  # Docs: https://jupyter-docker-stacks.readthedocs.io
  # Docs: https://almond.sh/docs/intro
  jupyter:
    container_name: ionosphere-iif-jupyter
    profiles: ["jupyter"]
    build:
      context: ./docs/jupyter
      dockerfile: Dockerfile
    ports:
      # Default Jupyter Lab WEB-interface port
      - 8888:8888
    volumes:
      - './docs/jupyter/:/home/jovyan/work'
      - './:/home/jovyan/ionosphere_iif:ro'

  reporter:
    container_name: ionosphere-iif-reporter
    profiles: ["reporter"]
    build:
      context: ./grafana-reporter/
    environment:
      - TZ=${REPORTER_TZ:-UTC}
    volumes:
      - './grafana-reporter/archives/:/usr/src/app/archives'
    depends_on:
#    - clickhouse
#    - grafana
    - reporter-webdriver

  reporter-webdriver:
    container_name: ionosphere-iif-reporter-webdriver
    image: selenium/standalone-firefox:4.1.3
    profiles: ["reporter"]
    environment:
      - START_XVFB=false
      - TZ=${WEBDRIVER_TZ:-UTC}
    ports:
      - 4444:4444
      - 7900:7900
    shm_size: 2gb

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  clickhouse_db:
    driver: local
